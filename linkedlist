  class node:
    def __init__(self, data = 0):
        self.data = data
        self.next = None

class Linked_list:
    def __init__(self):
        self.head = node()

    def append(self,data):
        new_node = node(data)
        cur = self.head
        while cur.next != None :
            cur = cur.next
        cur.next = new_node

    def length(self):
        cur = self.head
        total = 0
        while cur.next != None :
            total += 1
            cur = cur.next
        return total

    def display(self):
        elems = []
        cur_node = self.head
        while cur_node.next != None :
            cur_node = cur_node.next
            elems.append(cur_node.data)
        print (elems)

    def erase_value(self,value):
        if self.head is None :
            print('data kosong')
            return
        if value == self.head.data :
            self.head = self.head.next
            return
        x = self.head
        while x.next != None :
            if value == x.next.data:
                break
            x = x.next
        if x.next is None :
            print("data tidak ada")
        else :
            x.next = x.next.next

    def hapus_duplikat(self):
        cur = self.head
        prev = None
        dup_value = dict()
        while cur :
            if cur.data in dup_value :
                prev.next = cur.next
                cur = None
            else :
                dup_value[cur.data] = 1
                prev = cur
            cur = prev.next

    def swap(self, index1, index2):
        prevNode1 = None;
        prevNode2 = None;
        node1 = self.head;
        node2 = self.head;
        if (self.head == None):
            return;
        if (index1 == index2):
            return;
        while (node1 != None and node1.data != index1):
            prevNode1 = node1;
            node1 = node1.next;
        while (node2 != None and node2.data != index2):
            prevNode2 = node2;
            node2 = node2.next;
        if (node1 != None and node2 != None):
            if (prevNode1 != None):
                prevNode1.next = node2;
            else:
                self.head = node2;
            if (prevNode2 != None):
                prevNode2.next = node1;
            else:
                self.head = node1;
            temp = node1.next;
            node1.next = node2.next;
            node2.next = temp;
        else:
            print("Swapping is not possible");





my_list = Linked_list()

my_list.append(2)
my_list.append(4)
my_list.append(4)
my_list.append(6)
my_list.append(1)
my_list.append(9)
my_list.append(7)
my_list.append(3)
my_list.append(6)
my_list.display()
print('menghapus value :')
my_list.erase_value(1)
my_list.display()
print('menghapus Duplikat :')
my_list.hapus_duplikat()
my_list.display()
print('menukar node tail dengan head :')
my_list.swap(2,3)
my_list.display()
